[Unit]
Description=Octo Instance
After=docker.service
Requires=docker.service

[Service]
KillSignal=SIGINT
TimeoutStartSec=300
TimeoutStopSec=10
ExecStartPre=-/usr/bin/docker kill octo-<%= @uuid %>
ExecStartPre=-/usr/bin/docker rm octo-<%= @uuid %>
ExecStart=/bin/sh -c '/usr/bin/docker run \
  --name octo-<%= @uuid %> \
  --memory=200m \
  --env MESHBLU_SERVER=$(/usr/bin/etcdctl get /meshblu/host) \
  --env MESHBLU_PORT=$(/usr/bin/etcdctl get /meshblu/port) \
  --env AIRBRAKE_KEY=$(/usr/bin/etcdctl get /airbrake/key) \
  --env MESHBLU_UUID=<%= @uuid %> \
  --env MESHBLU_TOKEN=<%= @token %> \
  --env DEPLOYMENT_UUID=<%= @deploymentUuid %> \
  --env OCTOBLU_URI=$(/usr/bin/etcdctl get /octoblu/uri) \
  --env NODE_ENV=$(/usr/bin/etcdctl get /node/env) \
  <%= @image %>'
ExecStop=/bin/sh -c '/usr/bin/echo "Saving state" && \
  /usr/bin/docker run \
    --rm \
    --memory=200m \
    --env FLOW_DEPLOY_SERVICE_BASE_URI=$(/usr/bin/etcdctl get /flow-deploy-service/base-uri) \
    --env MESHBLU_SERVER=$(/usr/bin/etcdctl get /meshblu/host) \
    --env MESHBLU_PORT=$(/usr/bin/etcdctl get /meshblu/port) \
    --env MESHBLU_UUID=<%= @uuid %> \
    --env MESHBLU_TOKEN=<%= @token %> \
  octoblu/flow-util:entrypoint savepause && \
  /usr/bin/docker kill octo-<%= @uuid %>'

[X-Fleet]
MachineMetadata=Role=octo-runner
